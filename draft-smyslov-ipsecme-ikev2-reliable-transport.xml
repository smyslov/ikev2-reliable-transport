<?xml version="1.0" encoding="UTF-8"?>

<rfc category="std" submissionType="IETF" ipr="trust200902" docName="draft-smyslov-ipsecme-ikev2-reliable-transport-04">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="no"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>

    <front>
        <title abbrev="Separate IKE and ESP Transports">Separate Transports for IKE and ESP</title>
        <author initials='V.' surname="Smyslov" fullname='Valery Smyslov'>
            <organization>ELVIS-PLUS</organization>
            <address>
                <postal>
                    <street></street>
                    <city></city>
                    <code></code>
                    <country>RU</country>
                </postal>
                <phone></phone>
                <email>svan@elvis.ru</email>
            </address>
        </author>

        <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
          <organization>Nokia</organization>
          <address>
            <postal>
              <street></street>
              <country>India</country>
            </postal>
            <email>kondtir@gmail.com</email>
          </address>
        </author>

        <date/>

        <abstract>
          <t>The Internet Key Exchange protocol version 2 (IKEv2) can operate
          either over unreliable (UDP) transport or over reliable (TCP) transport.
          If TCP is used, then IPsec tunnels created by IKEv2 also use TCP. This
          document specifies how to decouple IKEv2 and IPsec transports so that
          IKEv2 can operate over TCP, while IPsec tunnels use unreliable
          transport. This feature allows IKEv2 to effectively exchange large blobs
          of data (e.g., when post-quantum algorithms are employed) while avoiding
          performance problems that arise when IPsec uses TCP.</t>
        </abstract>
    </front>

    <middle>
        <section anchor="intro" title="Introduction">
          <t>The Internet Key Exchange protocol version 2 (IKEv2) <xref
          target="RFC7296"></xref> originally used unreliable transport (UDP) for
          its messages. Later it was extended to use TCP <xref
          target="RFC9329"></xref> where UDP is blocked. UDP remains the preferred
          transport for IKEv2, and TCP is only used if UDP datagrams cannot get
          through.</t>

          <t>Originally IKEv2 peers exchanged only a small amount of data, so that
          simple retransmission mechanism on top of UDP with no congestion control
          sufficed. The situation has changed when post-quantum cryptographic (PQC)
          algorithms began to be incorporated into IKEv2 <xref
          target="RFC9370"></xref>. Most of post-quantum algorithms require IKE
          peers to exchange much more data, than classical algorithms, up to tens
          (or even hundreds) Kbytes. A few proposals
          exist that allow to overcome the 64 Kbytes limitation on the size of an
          IKE payload (<xref target="I-D.nir-ipsecme-big-payload"></xref>, <xref
          target="I-D.smyslov-ipsecme-ikev2-extended-pld"></xref>, <xref
          target="I-D.tjhai-ikev2-beyond-64k-limit"></xref>).</t>

          <t>When IKE messages grow to tens or even hundreds of kilobytes, using
          UDP as a transport becomes challenging. The use of IKE fragmentation
          <xref target="RFC7383"></xref> helps mitigate IP fragmentation issues
          and ensures that each IKE message fragment fits into a UDP datagram,
          even if the original message does not. However, all IKE fragments are
          always sent (and retransmitted) simultaneously, meaning that as the
          number of fragments increases and congestion control remains absent, the
          simple retransmission mechanism of IKEv2 will perform poorly potentially
          causing even more problems for the network.</t>

          <t>In some cases, a pure PQC Key Exchange may be required for specific
          deployments, particularly those governed by regulatory or compliance
          mandates that necessitate exclusive use of post-quantum cryptography.
          Examples include high-security environments or sectors governed by
          stringent cryptographic standards. In this case larger amount of data need
          to be sent in the IKE_SA_INIT exchnage, that makes using UDP problematic. 
          </t>

          <t>Using reliable transport (e.g., TCP) for IKEv2 could be a solution to
          the problem. However, the current use of TCP as defined in <xref
          target="RFC9329"></xref> implies that ESP SAs are also encapsulated in
          TCP, which has negative impact on IPsec performance (see Section 9 of
          <xref target="RFC9329"></xref>).</t>

          <t>This specification allows to decouple IKE and IPsec transports,
          making it possible to use a reliable transport for IKEv2
          while continuing to use an unreliable transport for IPsec.</t>

          <t>The idea to decouple IKE and IPsec transports was originally
          presented in <xref target="I-D.tjhai-ikev2-beyond-64k-limit"></xref>.
          </t>

        </section>

        <section anchor="mustshouldmay" title="Terminology and Notation">
            <t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", 
            "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted 
            as described in BCP 14 <xref target="RFC2119" /> <xref target="RFC8174" /> when, and only when, 
            they appear in all capitals, as shown here.
            </t>
        </section>

        <section anchor="protocol" title="Protocol Details">
          <t>If the initiator supports this extension and is configured to use it
          and also anticipates that large amount of data may be exchanged in this
          SA (e.g. it proposes key exchange algorithms with large public keys),
          then the initiator starts the IKE_SA_INIT exchange using UDP port 4500
          and includes a new status type notification SEPARATE_TRANSPORTS
          (&lt;TBA by IANA&gt;) into the request message. 
          </t>

          <t>The SEPARATE_TRANSPORTS notification has Protocol ID set 0 and SPI Size set to 0.
          This specification does not define any data for this notification,
          so it is sent with no data. Future specification may override this.
          Peers conforming to this specification  <bcp14>MUST</bcp14> ignore any notification data if any.
          </t>

          <t> Using UDP port 4500 for the IKE_SA_INIT messages is
          explicitly allowed by <xref target="RFC7296"></xref>, and ensures that
          IPsec packets can get through if they are UDP encapsulated.</t>

          <t>Alternatively, the initiator can start IKE_SA_INIT using TCP, as described in <xref target="RFC9329" />,
          for example when request message contains the Key Exchange payload with large public key.
          </t>

          <t>If the responder supports this extension and is configured to use it
          and the IKE_SA_INIT request contains the SEPARATE_TRANSPORTS
          notification, then the responder sends back this notification in the
          response.</t>

          <figure><artwork align="center" ><![CDATA[
Initiator (UDP:4500)               Responder (UDP:4500)
                        - or - 
Initiator (TCP)                    Responder (TCP:4500)
-------------------------------------------------------------------
HDR , SAi1, KEi1, Ni,
[N(NAT_DETECTION_SOURCE_IP),
N(NAT_DETECTION_DESTINATION_IP),]
N(SEPARATE_TRANSPORTS)  --->
                                   HDR, SAr1, KEr1, Nr,
                                   [N(NAT_DETECTION_SOURCE_IP),
                                   N(NAT_DETECTION_DESTINATION_IP),]
                             <---  N(SEPARATE_TRANSPORTS)
          ]]></artwork></figure>

          <t>If request was sent over UDP, then the initiator <bcp14>MUST</bcp14> switch to TCP using destination port
          4500 in the next exchange (IKE_INTERMEDIATE or IKE_AUTH) and the
          responder <bcp14>MUST</bcp14> be prepared to receive the next exchange request message
          on TCP port 4500.
          </t>

          <figure><artwork align="center" ><![CDATA[
Initiator (TCP)                    Responder (TCP:4500)
-------------------------------------------------------------------
HDR, SK{...}  --->
                             <---  HDR, SK{...}
          ]]></artwork></figure>

          <t>All subsequent IKE exchanges <bcp14>MUST</bcp14> continue to use TCP transport.
          All recommendations of <xref target="RFC9329"></xref> regarding maintaning
          TCP connection apply accordingly.</t>

          <t>With this IKE extension child SAs are created as defined in <xref
          target="RFC7296"></xref> - they either use direct transport over IP or
          are UDP encapsulated if NAT is detected. Note, that in the latter case
          peers are responsible for maintaining NAT mapping by sending NAT
          keepalives (see Section 2.23 of <xref target="RFC7296"></xref>).</t>

          <t>Intermediate devices may have different filtering rules for different transport protocols.
          Since IKE and ESP use separate transports, it is possible that ESP transport is blocked
          while IKE transport (TCP) is not. To detect possible connectivity problems with ESP
          an encrypted ESP ping technology <xref target="I-D.ietf-ipsecme-encrypted-esp-ping" /> <bcp14>MAY</bcp14> be used.
          </t>
        </section>

        <section anchor="interaction" title="Interaction with IKEv2 Extensions">
          <t>MOBIKE <xref target="RFC4555" /> allows IKE SA along with its Child SAs to migrate from one IP address to another.
          Section 7.1 of <xref target="RFC9329" /> defines that in case of using TCP as IKE transport, 
          peer should try to switch to UDP in case of IP address change. This specification 
          updates this requirement: in case of separate transports, peers <bcp14>MUST NOT</bcp14>
          try to switch IKE SA to UDP. However, ESP SA <bcp14>MAY</bcp14> switch from UDP to TCP
          in case UDP is blocked for new IP address.
          </t>
        </section>

        <section anchor="security" title="Security Considerations">
          <t>Section 10 of <xref target="RFC9329" /> discusses security implications of using TCP as IKE transport.
          </t>
        </section>

      <section anchor="iana" title="IANA Considerations">
        <t> This document defines a new Notify Message Type in the "IKEv2 Notify Message Status Types" registry:
        </t>
  
        <figure align="center">
            <artwork align="left"><![CDATA[
<TBA>         SEPARATE_TRANSPORTS
            ]]></artwork>
        </figure>
      </section>

    </middle>

    <back>
        <references title='Normative References'>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9329.xml" ?>
        </references>

        <references title='Informative References'>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4555.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7383.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9370.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.nir-ipsecme-big-payload.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.tjhai-ikev2-beyond-64k-limit.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.smyslov-ipsecme-ikev2-extended-pld.xml" ?>
          <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ipsecme-encrypted-esp-ping.xml" ?>
        </references>
    </back>
</rfc>



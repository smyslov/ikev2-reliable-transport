<?xml version="1.0" encoding="US-ASCII"?>
<rfc category="std"
     docName="draft-smyslov-ipsecme-ikev2-reliable-transport-03"
     ipr="trust200902" submissionType="IETF">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="no"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes" ?>

  <front>
    <title abbrev="Mixed Transport in IPsec">Use of Mixed Transport in
    IPsec</title>

    <author fullname="Valery Smyslov" initials="V." surname="Smyslov">
      <organization>ELVIS-PLUS</organization>

      <address>
        <postal>
          <street>PO Box 81</street>

          <city>Moscow (Zelenograd)</city>

          <code>124460</code>

          <country>RU</country>
        </postal>

        <phone>+7 495 276 0211</phone>

        <email>svan@elvis.ru</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization>Nokia</organization>

      <address>
        <postal>
          <street></street>

          <country>India</country>
        </postal>

        <email>kondtir@gmail.com</email>
      </address>
    </author>

    <date />

    <abstract>
      <t>The Internet Key Exchange protocol version 2 (IKEv2) can operate
      either over unreliable (UDP) transport or over reliable (TCP) transport.
      If TCP is used, then IPsec tunnels created by IKEv2 also use TCP. This
      document specifies how to decouple IKEv2 and IPsec transports so that
      IKEv2 can operate over TCP, while IPsec tunnels use unreliable
      transport. This feature allows IKEv2 to effectively exchange large blobs
      of data (e.g., when post-quantum algorithms are employed) while avoiding
      performance problems that arise when IPsec uses TCP.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>The Internet Key Exchange protocol version 2 (IKEv2) <xref
      target="RFC7296"></xref> originally used unreliable transport (UDP) for
      its messages. Later it was extended to use TCP <xref
      target="RFC9329"></xref> where UDP is blocked. UDP remains the preferred
      transport for IKEv2, and TCP is only used if UDP datagrams cannot get
      through.</t>

      <t>Originally IKEv2 peers exchanged only a small amount of data, so that
      simple retransmission mechanism on top of UDP with no congestion control
      sufficed. The situation has changed when post-quantum cryptographic
      algorithms began to be incorporated into IKEv2 <xref
      target="RFC9370"></xref>. Most of post-quantum algorithms require IKE
      peers to exchange much more data, than classical algorithms, up to tens
      (or even hundreds) Kbytes (e.g., Classic McEliece). A few proposals
      exist that allow to overcome the 64 Kbytes limitation on the size of an
      IKE payload (<xref target="I-D.nir-ipsecme-big-payload"></xref>, <xref
      target="I-D.smyslov-ipsecme-ikev2-extended-pld"></xref>, <xref
      target="I-D.tjhai-ikev2-beyond-64k-limit"></xref>).</t>

      <t>When IKE messages grow to tens or even hundreds of kilobytes, using
      UDP as a transport becomes challenging. The use of IKE fragmentation
      <xref target="RFC7383"></xref> helps mitigate IP fragmentation issues
      and ensures that each IKE message fragment fits into a UDP datagram,
      even if the original message does not. However, all IKE fragments are
      always sent (and retransmitted) simultaneously, meaning that as the
      number of fragments increases and congestion control remains absent, the
      simple retransmission mechanism of IKEv2 will perform poorly potentially
      causing even more problems for the network.</t>

      <t>Using reliable transport (like TCP) for IKEv2 could be a solution to
      the problem. However, the current use of TCP as defined in <xref
      target="RFC9329"></xref> implies that ESP SAs are also encapsulated in
      TCP, which has negative impact on IPsec performance (see Section 9 of
      <xref target="RFC9329"></xref>).</t>

      <t>This specification allows to decouple IKE and IPsec transports,
      making it possible to negotiate and use a reliable transport for IKEv2
      while continuing to use an unreliable transport for IPsec.</t>

      <t>The idea to decouple IKE and IPsec transports was originally
      presented in <xref
      target="I-D.tjhai-ikev2-beyond-64k-limit"></xref>.</t>

      <t>In some cases, a pure PQC Key Exchange may be required for specific
      deployments, particularly those governed by regulatory or compliance
      mandates that necessitate exclusive use of post-quantum cryptography.
      Examples include high-security environments or sectors governed by
      stringent cryptographic standards. For PQ KEM algorithms like ML-KEM, if
      TCP is used for IKEv2 and peers do not require traditional algorithms,
      then ML-KEM can be used directly within the IKE_SA_INIT message when TCP
      transport is enabled for IKEv2. This approach allows IKEv2 to avoid UDP
      fragmentation concerns while enabling a purely post-quantum key exchange
      for deployments requiring exclusive PQC use.</t>

      <t>The proposed mechanism allows all of the parameter sets of ML-KEM
      (ML-KEM-512, ML-KEM-768 and ML-KEM-1024) to be used in IKE_SA_INIT as a
      quantum-resistant-only key exchange. Unlike the approach in <xref
      target="I-D.kampanakis-ml-kem-ikev2"></xref>, which suggests that only
      ML-KEM-512 and ML-KEM-768 can be used in IKE_SA_INIT, this specification
      enables the use of ML-KEM-1024 as well, provided that IKEv2 is
      transported over TCP. This ensures that deployments requiring a pure PQC
      key exchange, can establish keys in the IKE_SA_INIT message itself
      without concerns about exceeding typical network MTUs.</t>
    </section>

    <section anchor="mustshouldmay" title="Terminology and Notation">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"></xref> <xref target="RFC8174"></xref> when, and
      only when, they appear in all capitals, as shown here.</t>
    </section>

    <section anchor="protocol" title="Use of Reliable Transport for IKEv2 SA">
      <t>If the initiator supports this extension and is configured to use it
      and also anticipates that large amount of data may be exchanged in this
      SA (e.g. it proposes Key Exchange transforms with large public keys),
      then the initiator starts the IKE_SA_INIT exchange using UDP port 4500
      and includes a new status type notification RELIABLE_IKE_TRANSPORT
      (&lt;TBA1 by IANA&gt;) into the request message. The
      RELIABLE_IKE_TRANSPORT notification has protocol 0, SPI size 0 and
      contains no data. Using UDP port 4500 for the IKE_SA_INIT messages is
      explicitly allowed by <xref target="RFC7296"></xref>, and ensures that
      IPsec packets can get through if they are UDP encapsulated.</t>

      <t>If the responder supports this extension and is configured to use it
      and the IKE_SA_INIT request contains the RELIABLE_IKE_TRANSPORT
      notification, then the responder sends back this notification in the
      response.</t>

      <figure>
        <artwork align="center"><![CDATA[
Initiator (UDP:4500)               Responder (UDP:4500)
-------------------------------------------------------------------
HDR , SAi1, KEi1, Ni,
[N(NAT_DETECTION_SOURCE_IP),
N(NAT_DETECTION_DESTINATION_IP),]
N(RELIABLE_IKE_TRANSPORT)  --->
                                   HDR, SAr1, KEr1, Nr,
                                   [N(NAT_DETECTION_SOURCE_IP),
                                   N(NAT_DETECTION_DESTINATION_IP),]
                             <---  N(RELIABLE_IKE_TRANSPORT)
      ]]></artwork>
      </figure>

      <t>In this case the initiator MUST switch to TCP using destination port
      4500 in the next exchange (IKE_INTERMEDIATE or IKE_AUTH) and the
      responder MUST be prepared to receive the next exchange request message
      on TCP port 4500.</t>

      <figure>
        <artwork align="center"><![CDATA[
Initiator (TCP)                    Responder (TCP:4500)
-------------------------------------------------------------------
HDR, SK{...}  --->
                             <---  HDR, SK{...}
      ]]></artwork>
      </figure>

      <t>All subsequent IKE exchanges MUST continue to use TCP transport. In
      particular, peers MUST NOT try to swich IKE transport to UDP as defined
      in Sections 7.1 and 7.3 of <xref target="RFC9329"></xref>. All
      recommendations of <xref target="RFC9329"></xref> regarding maintaning
      TCP connection apply accordingly.</t>

      <t>With this IKE extension child SAs are created as defined in <xref
      target="RFC7296"></xref> - they either use direct transport over IP or
      are UDP encapsulated if NAT is detected. Note, that in the latter case
      peers are responsible for maintaining NAT mapping by sending NAT
      keepalives (see Section 2.23 of <xref target="RFC7296"></xref>).</t>
    </section>

    <section anchor="protocol2"
             title="Use of Unreliable Transport for Child SAs">
      <t><xref target="RFC9329"></xref> defines an alternative transport
      method for IKEv2 and IPsec traffic by allowing them to be transported
      over a single TCP connection. This modification allows IKEv2 to signal
      support for transporting ESP traffic over UDP. The initiator starts the
      IKE_SA_INIT exchange using TCP and continues to use TCP for all IKEv2
      messages. To signal the ability to use UDP for ESP traffic, the
      initiator may include a new notification type, ESP_OVER_UDP, in the
      IKE_SA_INIT exchange.</t>

      <t>The USE_UNRELIABLE_TRANSPORT notification has Protocol ID set to 0,
      SPI Size set to 0, and contains no additional data. This notification
      signals to the responder that the initiator is willing to use UDP port
      4500 for ESP traffic if UDP is not blocked by firewalls or NAT devices.
      If the responder also supports and is willing to use UDP for ESP, it
      will include the USE_UNRELIABLE_TRANSPORT notification in its response
      to the IKE_SA_INIT exchange. With this IKE extension, child SAs are
      created as defined in <xref target="RFC7296"></xref>. If UDP for ESP is
      signaled and supported by both peers (via the USE_UNRELIABLE_TRANSPORT
      notification), the ESP traffic will be encapsulated in UDP port 4500 to
      traverse NAT or firewalls. However, if no NAT is detected between the
      peers, IPsec data packets are sent using ESP directly, without UDP
      encapsulation. If either peer does not support UDP for ESP or if UDP is
      blocked, the ESP traffic will be transported using the existing
      transport method, such as over the same TCP connection as IKEv2.</t>

      <figure>
        <artwork align="center"><![CDATA[
Initiator (UDP:4500)               Responder (UDP:4500)
-------------------------------------------------------------------
HDR , SAi1, KEi1, Ni,
[N(NAT_DETECTION_SOURCE_IP),
N(NAT_DETECTION_DESTINATION_IP),]
N(USE_UNRELIABLE_TRANSPORT)  --->
                                   HDR, SAr1, KEr1, Nr,
                                   [N(NAT_DETECTION_SOURCE_IP),
                                   N(NAT_DETECTION_DESTINATION_IP),]
                             <---  N(USE_UNRELIABLE_TRANSPORT)
      ]]></artwork>
      </figure>

      <section title="Behavior in CREATE_CHILD_SA Exchanges">
        <t>When a peer desires to use UDP transport for ESP traffic in a new
        Child SA, it MUST include the USE_UNRELIABLE_TRANSPORT notification in
        the CREATE_CHILD_SA request. This is necessary even if this
        notification was exchanged earlier in the IKE_SA_INIT or a previous
        CREATE_CHILD_SA, as support for unreliable transport is negotiated on
        a per-SA basis. If both peers include the USE_UNRELIABLE_TRANSPORT
        notification during the exchange, the resulting Child SA's ESP traffic
        will be encapsulated over UDP port 4500 (or direct IP, if no NAT is
        detected). If the notification is not sent or not echoed, the Child SA
        inherits the IKE SAs TCP for ESP, as specified in <xref
        target="RFC9329"></xref>.</t>
      </section>
    </section>

    <section anchor="dual" title="Dual Mechanisms">
      <t>The mechanisms defined in this specification RELIABLE_IKE_TRANSPORT
      and USE_UNRELIABLE_TRANSPORT, serve complementary but distinct purposes.
      They are both required to support the use of IKEv2 in deployments
      involving post-quantum cryptography and constrained network
      conditions.</t>

      <t>The RELIABLE_IKE_TRANSPORT notification enables the IKEv2 protocol to
      operate over a reliable transport (TCP), addressing challenges
      introduced by post-quantum key exchange algorithms that involve the
      exchange of large payloads, often exceeding typical MTU sizes. Operating
      IKEv2 over TCP ensures reliable and congestion-aware delivery of these
      large messages, mitigating the limitations of UDP-based fragmentation
      and retransmission mechanisms.</t>

      <t>However, as specified in <xref target="RFC9329"></xref>, when IKEv2
      is transported over TCP, the resulting IPsec Child SAs are also required
      to use TCP as a transport. This presents performance drawbacks for ESP
      traffic, such as head-of-line blocking and TCP-in-TCP inefficiencies. To
      address these concerns, this specification introduces the
      USE_UNRELIABLE_TRANSPORT notification, which allows IKE peers to
      negotiate the use of UDP transport for ESP, even when IKE itself is
      carried over TCP.</t>

      <t>By separating these mechanisms, implementations gain the flexibility
      to:</t>

      <t><list style="symbols">
          <t>Use reliable transport (TCP) for IKEv2 message exchanges where
          large payloads demand it, while retaining efficient UDP
          encapsulation for ESP traffic.</t>
        </list></t>

      <t>These mechanisms are negotiated independently and can be used
      together or separately depending on deployment needs.</t>
    </section>

    <section anchor="notification"
             title="Handling Irrelevant or Unsupported USE_UNRELIABLE_TRANSPORT Notifications">
      <t>If a peer receives the USE_UNRELIABLE_TRANSPORT notification in an
      exchange where it is not applicable, for example, during IKE_SA_INIT
      when the IKE SA is already running over UDP, the peer MUST ignore the
      notification. Similarly, if a peer does not support sending ESP over UDP
      when IKE runs over TCP, it MUST silently ignore the
      USE_UNRELIABLE_TRANSPORT notification and continue using the default
      behavior defined in <xref target="RFC9329"></xref>, which is to send ESP
      over TCP.</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>Section 10 of <xref target="RFC9329"></xref> discusses security
      implications of using TCP as IKE transport.</t>
    </section>

    <section anchor="iana" title="IANA Considerations">
      <t>This document defines a new Notify Message Type in the "IKEv2 Notify
      Message Status Types" registry:</t>

      <figure align="center">
        <artwork align="left"><![CDATA[
<TBA1>        RELIABLE_IKE_TRANSPORT
<TBA2>        USE_UNRELIABLE_TRANSPORT]]></artwork>
      </figure>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9329.xml" ?>
    </references>

    <references title="Informative References">
      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7383.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9370.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.nir-ipsecme-big-payload.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.tjhai-ikev2-beyond-64k-limit.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.smyslov-ipsecme-ikev2-extended-pld.xml" ?>

      <?rfc include="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.kampanakis-ml-kem-ikev2.xml" ?>
    </references>
  </back>
</rfc>
